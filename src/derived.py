import polars as pl
import typer
from typing_extensions import Annotated

from github_permalink import get_current_permalink, github_permalink
from util import read_csv

app = typer.Typer()


############################################################
# Helpers
############################################################

############################################################
# Entrypoints
############################################################
_sale_price_help = "Property sale price csv file generated by maui-rpad.py"
_household_income_help = "Household income csv file generated by nhgis.py"
_out_help = "Output filename (csv format)"


@github_permalink
@app.command()
def maui_property_affordability(
    sale_price_filename: Annotated[
        str, typer.Option("--sale-prices", "-s", help=_sale_price_help)
    ],
    household_income_filename: Annotated[
        str,
        typer.Option(
            "--household-income", "-i", help=_household_income_help
        ),
    ],
    out_filename: Annotated[
        str, typer.Option("--out", "-o", help=_out_help)
    ],
) -> None:
    """Calculate ratio of median property price to median household
    income for different regions of Maui.

    Use median property price data generated by maui_rpad.py and median
    household income data generated by nhgis.py as inputs to calculate
    the ratio of property price to household income for different
    regions of Maui.

    Args:
        sale_price_filename (str): median sale price csv data
        household_income_filename (str): median houeshold income csv data
        out_filename (str): Output filename (csv format)
    """
    price_lf = read_csv(sale_price_filename, cols=[])
    income_lf = read_csv(household_income_filename, cols=[])

    lf = price_lf.join(income_lf, on=["region", "year"], how="inner")

    lf = lf.select(
        pl.col("region"),
        pl.col("year"),
        pl.col("adj_price")
        .truediv("adj_median_household_income")
        .round(1)
        .alias("price_to_income_ratio"),
        pl.col("adj_price"),
        pl.col("adj_median_household_income"),
    ).sort("region", "year")

    # Write results
    df = lf.collect()
    df.write_csv(out_filename)

    # Write github permalink
    txt_filename = out_filename.replace(".csv", ".txt")
    with open(txt_filename, "w") as f:
        f.write(get_current_permalink() or "None")


@app.command()
def dummy() -> None:
    pass


############################################################
# Main
############################################################
if __name__ == "__main__":
    app()
